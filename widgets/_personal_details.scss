// 
// Reason to don't use id selectors instead of class selectors
// http://csswizardry.com/2011/09/when-using-ids-can-be-a-pain-in-the-class/
// http://screwlewse.com/2010/07/dont-use-id-selectors-in-css/
// http://oli.jp/2011/ids/

.personal_details_widget {
  form>ul, & ul.products {
    margin: 30px 0;
    width: 100%;
    li.product {
      .description {
        &:before {
          font-family: $font_icons;
          color: $blue;
          content: $font_icons_headhphones;
          margin-left: -20px; //this is faking it, compensating for the space requirement of :before, display: inline does not seem to work
          left: -10px;
          position: relative;
        }
        padding-left: 40px;
        margin-bottom: 20px;
      }

      div.title {
        font-family: $font_medium;  //font-weight bold does not work for this font family >:(;
      }
    }
  }

  ul.horizontal {
    display: block;
  }
  li.value {
    @media screen and(min-width: $rc-m-min-width) and(max-width: $rc-l-max-width) {
      line-height: 24px;
      min-height: $elements_height;
    }
    span {
      &.content, &.help {
        display: inline;
      }
      &.help {
        @media screen and(max-width: $rc-s-max-width) {
          display: none;
        }
      }
    }
  }
  li.label {
    min-height: 0;
    @media screen and(min-width: $rc-m-min-width) and(max-width: $rc-l-max-width) {
      //height: inherit;  //$elements_height;
    }
    &:after {
      content: ":";
    }
  }
  label.left {
    float:left;
  }

  input[type=text], input[type=email], input[type=number], select, .ddTitle {
    display: none;
  }
  .edit {
    ul.error {
      display: block;
      opacity: 0;
      height: 24px;
      min-height: 0;
      [class*='span'] {
        min-height: 0;  //overwriting min-height from row-fluid
        line-height: 18px;  //overwriting line-height from *body
      }
      &> li {
        color: $red;
        font-size: $small;
        margin-left: 0;
      }
      &.visible {
        opacity: 1;
      }
    }
    li.label {
      padding-right: 55px;
      text-align: right;
      @media screen and(max-width: $rc-s-max-width) {
        text-align: left;
      }
    }
    li.label, label {
      font-family: $font_normal;
      &:after {
        content: "";
      }
    }
    li.label.required:after, label.checkbox.required span.label:after {
      margin-left: 5px;
      content: "*";
      color: $red;
    }

    input[type=text], input[type=email], input[type=number], select, .ddTitle {
      display: block;
    }
    li.value {
      span {
        &.content, &.help {
          display: none;
        }
      }
    }
  }

  ul.horizontal.row-fluid {  //trying to fix the height set by the grid of 50px; there might be a necessity to adapt the margin-bottom in responsiveness and hopefully this change can be adapted in the future over all widgets and / or implemented in grid.scss
    height: auto;
    margin-bottom: 20px;
  }

  // fix responsive peculiarities
  .row-fluid [class*='span'] {
    display: inline;
    @media screen and(max-width: $rc-s-max-width) {
      min-height: 5px;
    }
  }

  .residential_address {
    bottom-margin: 40px;
  }
}
