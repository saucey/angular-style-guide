// 
// Reason to don't use id selectors instead of class selectors
// http://csswizardry.com/2011/09/when-using-ids-can-be-a-pain-in-the-class/
// http://screwlewse.com/2010/07/dont-use-id-selectors-in-css/
// http://oli.jp/2011/ids/

.bubble {
  @include bubble(10px, 2px, $quadrant: 3, $bottom: 20px, $border-color: $grey, $background-color: $white);
}


#lhfs_widget {
  .tip {
    background-color: $sky;
    @include inlineFrame();
    padding-left: 40px;
    .intro {
      &:before {
        font-family: $font_icons;
        content: "\e62f";
        margin-left: -20px; //this is faking it, compensating for the space requirement of :before, display: inline does not seem to work
        margin-right: 5px;
        left: -10px;
        position: relative;
      }
      color: $white;
      font-size: $large;
      font-family: $font_normal;
      margin-bottom: 20px;
    }
  }
  &>ul {
    margin: 30px 0;
    width: 100%;
    li.payment {
      .details {
        display: none;
      }
      .description {
        &:before {
          font-family: $font_icons;
          color: $blue;
          content: "\e605";
          margin-left: -20px; //this is faking it, compensating for the space requirement of :before, display: inline does not seem to work
          left: -10px;
          position: relative;
        }
        padding-left: 40px;
      }
      &.data {
        .details {
          display: block;
        }
        .description {
          display: none;
        }
      }

      div.title, span.police-number {
        font-family: $font_medium;  //font-weight bold does not work for this font family >:(;
      }
    }
  }
}

#lhfs_widget {
  $input_width: 228px;
  $input_margin: 5px;
  $input_height: 44px;
  input, select, .ddTitle {
    height: $input_height;
    padding: 9px 10px;
    padding-right: 10px;
    border-radius: $elements_border_radius;
    border: 1px solid $grey;
    background-color: $beige;
    white-space: nowrap;
    display: none;
    margin-top: 0px;
    margin-bottom: 0px;
    width: $input_width;
}

  .ddTitle .arrow {
    &:after {
      font-size: 11px;
      font-family: $font_icons;

      content: "\e631";
    }
  }

  input, select {
    &.error {
      border: 1px solid $red;
      &:before {

      }
    }
    &.half {
      width: $input_width / 2 - $input_margin;
      margin-right: $input_margin * 2;
      float: left;
      &:last-child {
        float: none;
      }
    }
    &.quarter {
      width: $input_width / 4 - $input_margin * 2;
      margin-right: $input_margin * 2;
      float: left;
      &:last-child {
        float: none;
      }
    }
  }
  input[type=checkbox], input[type=radio] {
    width: auto;
  }

  li.value {
    span {
      display: inline;
    }
  }
  li.label {
    &:after {
      content: ":";
    }
  }
  label.left {
    float:left;
  }

  .edit {
    li.label {
      font-family: $font_normal;
      text-align: right;
      padding-right: 55px;
      &:after {
        content: "";
      }
    }
    input, select, .ddTitle {
      display: block;
    }
    li.value {
      span {
        &.content, &.help {
          display: none;
        }
      }
    }
  }

  // fix responsive peculiarities
  .row-fluid [class*='span'] {
    display: inline;
    @media screen and(max-width: $rc-s-max-width) {
      min-height: 5px;
    }
  }
}

.help {
  margin-right: 20px;
  &:before {
    font-family: $font_icons;
    font-size: 16px;
    content: "\e630";
  }
}

ul.actions {
  text-align: left;
  li {
    float: none;
    display: block;
    &.edit {
      display: none;
    }
  }
  &.edit {
    text-align: right;
    li {
      display: block;
      &.view {
        display: none;
      }
    }
  }
}

ul.horizontal {
  margin: 10px 0 10px 0;
  @media screen and(max-width: $rc-s-max-width) {
    margin-bottom: 30px;
  }
  padding: 1px 0;
  //width: 100%;
  display: none; //together with the .data class for li.payment toggles on and off the visibility of the data elements
  &.clear {
    width: 100%;
    height: 1px;
    margin: 0 0 -1px;
    clear: both;
  }
  &.visible {
    display: block;
  }
  li {
    &.label {
      font-family: $font_normal;
    }
    &.value {
      font-family: $font_light;
    }
    display: inline-block;
    float: left;
    //width: 50%; //default value, can be overwritten by css, of course
    &:last-of-type {
      float: none;
      clear:both; //
    }
  }
}
